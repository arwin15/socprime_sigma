title: MuddyWater APT.
description: MuddyWater  APT Detector.
references:
- https://reaqta.com/2017/11/muddywater-apt-targeting-middle-east/
author: Alexandr Yamposlkyi, SOC Prime
status: testing
date: 2017/11/22
logsource:
  product: windows
  service: sysmon
detection:
  selection1:
    EventID: "1"
    file_hash:
    - 4121db476b66241610985350b825b9f1680d0171ab01a52b5ffcb56481521e44
    - a0abec361411cb11e01337939013bad1f54ad5865c73604a1b360d68ddfbd96a
    - b2c10621c9c901f0f692cae0306baa840105231f35e6ec36e41b88eebd46df4c
    - 16bcb6cc38347a722bb7682799e9d9da40788e3ca15f29e46b475efe869d0a04
#Powerstats and vbs launcher hashes
  selection2:
    EventID: "11"
  TargetFilename: 
    - C:\Windows\System32\Tasks\WindowsOptimizationsService
    - C:\Windows\System32\Tasks\Microsoft\WindowsOptimizationsService
#Scheduled Task entry called Microsoft\WindowsOptimizationsService which executes Wscript C:\Users\Public\Documents\System.Vbs.
---
logsource:
  product: windows
  service: powershell
detection:
  keywords:
  - WindowStyle hidden -ExecutionPolicy Bypass -nologo -noprofile -file C:\Users\Public\Documents\system.ps1
  - &((GEt-VARIAbLE '*MDR*').nAme[3,11,2]-JOiN'') (" $( sV 'Ofs' '')"+[stRinG](( 100000, [...]
  - &( $pShOme[21]+$psHOME[34]+'x') ([stRIng]::JOin( '' , ('100000 [...]
  - . ( $ShELlID[1]+$shelLiD[13]+'x') ( ( '1100110 [...]
#The VBS content is below reported and its scope is to simply run system.ps1 powershell script.
#Starting from system.ps1 the attack-chain goes through two blocks of code that prepare the ground for the third block of code, containing the real powershell backdoor. Each block sets the variables necessary for the correct execution of the backdoor. Since the entire content is quite large we summarized the overall structure as follows:
  condition: selection1 or selection2 or keywords
fields:
- Image
- TargetObject
- Hashes
falsepositives:
- Unknown
level: high
mitre-attack:
  Persistence:
  - Component Firmware